var code;
var timeSinceLastKeypress = 0;

function InterviewEditor() {
  this.updates = [];
  this.socket = new Pusher('<%= ENV['pusher_key'] %>');
  this.channel = socket.subscribe('test'); // THIS SHOULD BE THE PAGE URL
  this.code = CodeMirror(document.getElementById("code"),
  {
    lineNumbers: true
  });

  setInterval(this.incrementLastKeypress, 1000);
  setInterval(this.updateCode, 10);


  channel.bind('update_code', updateView);
  
    $('#code').on('keyup', function(e)
    {
      timeSinceLastKeypress = 0;
      updates.push(code.getValue());
    });

    $('#run_code').on('click', function(e) {
      e.preventDefault();
      toExec = code.getValue();
      $.ajax({
        url: '/api/run_code',
        type: 'post',
        data: { code: toExec },
        success: function(response) {
          $('#code_results').html(response.code);
        },
        error: function(response) {
          $('#code_results').html("Something went wrong. Please try again.");
        }
      });
    });
  }

}

InterviewEditor.prototype.updateView = function() {
  if(this.timeSinceLastKeypress > 1)
  {
    cursor = code.getCursor();
    code.setValue(data);
    code.setCursor(cursor);
  }
}
InterviewEditor.prototype.incrementLastKeypress = function() {
  this.timeSinceLastKeypress++;
};

InterviewEditor.prototype.update_code = function(code) {
  if(this.updates.length > 0) {
    $.post('/api/update_code', { "code": code });
  }
}

InterviewEditor.prototype.selectTheme = function() {
  previousCode = code.getValue();
  $('#code').html("");
  code = CodeMirror(document.getElementById("code"),
  {
    lineNumbers: true,
    theme: $('#themechange').val(),
    value: previousCode
  });
}

  this.initialize: function() {
    
  }

}

$(document).ready(function() {
  if($('div').hasClass('code')) {
    var editor = new InterviewEditor();
  }
});